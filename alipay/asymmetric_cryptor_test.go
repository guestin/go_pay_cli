package alipay

import (
	"encoding/base64"
	"fmt"
	"github.com/stretchr/testify/assert"
	"testing"
)

func TestRSAEncryptor_Sign(t *testing.T) {
	var encryptor = NewRSAEncryptor()
	key := `MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDjHd4qw0R3OdlCvFgUizhCQ8oo+70G+dpLaOt/2kENOFflKghwcuUQ+4nWpOn+nUGWWcpeYGrr8CdWNDw2aIhzDAyRsMUUh7ViMMC8HA+Esprdm7UsrP9l6GObRDQyY3xJwD3KYQqD118w7sEudHjohw1kRITDtWLuU3Ffbl4TSV7RVH/O+wDZ7SnsakQ3xAIni5dqDHmw4Dd5i7IUUG31gd59WC39M/lBKk1XSRVovShk9XAUrL0/W9hzydqgAS/9dFFQu4Ln3UxQ5hC8RVQmXBSytmZJzYPlFxScCpVtSWSJfJBvWYqNHmzpsrvVaYAlGOjpMZVXOgmrzlTXmnkdAgMBAAECggEAF67bpfXqw8wCfdUKEkpaOX68K/3kPj/7pXVxaUmnEuvXLoxtiNxSSq0QOJPF2sknN7hxQ9omDChk0bZsuPe5ktWk0eRvCK8GGREgZ/09GQdO4uEDyX7YuxW6nUxFbSO2qDIlv17TK+Bfisi62E9I9GZw3Q3QEmBtypBk+CCYKsZ/iAJ0OKMDmQz5Y/gcR578iWFsPfdsGPxK/vCZKIEzxSQDkCMtfFpWUQn8sqwdkoMYSfgiKilqFyjSVQZoTCtdnh8/EvmZMreB1fF7WnZYcdDATG4A5qvZyobRGkztYgeoaWV9NKTpw/GB80iiem2mduxiVaapstwNrKahk79suQKBgQD8HuwfJI+fXVGKnagalmlym2aW7CUur0LRhE9z6VPWNJu3K4D0clGsMZ3A2DEFlzXRlY1Sr8LuGTyVArX7ab9J0vWzSYepGkCwS5gD+77NrSu0Qxc6mp5wNXtdgjgxBaw/3MEjOtajykURB7yW38RaWFNZGKVn7LmMVKmXhcC5QwKBgQDmnHT0l0TJ2OMnZq0tAwBaCokImyJ6HYuRcKSaILWPDMz0SzhVp6jjOQsF12TFLNSgRDC+iPciqaWJzACRbIMDGqd6gguczo8tnCS4eD1LgXXSpODTQQYnTP3MfGow5jBX9II9jSL9NHRL5Sk/l1EN9Dj3M8dQMlJRtfrtB34uHwKBgQC27bzG7+EhcTUbzT5OZDoIRMbP1HE6CUIDAOwhHveMYUlmQrNjKZsmxC1A4dvXwZn0An2ytAJMfZUeTQQ7ccOwTdemCUDcKkcrYv3eTgdn9jDSrycoh01T/woOk9AviX0sLQEZjbR0zOsF60YjdiJiptl6uM4ytGkAb+FJJmvqPwKBgDBj9Ea+1zhjwoaqDPy8/H3oaAjeRMXLHVZPhLqy0mZKEVfR0OhoXhAQEDgRkputZJCcvn28z97+KjZYEGZzlqo4FZynXThyP6kacroiwPnvGIIzBtpNcrUcesVF9iJ8qvhJ3mp8CzOGpkCmvZkSb3e2H53/x3sUlCGBRj4mrFuRAoGBALwFtuRiIEwNRsd82x5QverXDJGsLls4LTZm3shfoZUtNnkvlWxer9SbxRGb7APsToAessgZ14RrVTgoztTKzedOkHIuR3P9IO5aSZeoC0FZg3vjmiNFhrV5dVuHvXTNn6i7Q35ab8m+eqEcJ9YeihBbavEMU04zUB5NGugtt8K+`
	str := `app_id=2014072300007148&charset=utf8&sign_type=RSA`
	priKey, err := parserPrivateKey(key)
	if !assert.NoError(t, err) {
		t.FailNow()
	}
	signByte, err := encryptor.Sign([]byte(str), priKey)
	if !assert.NoError(t, err) {
		t.FailNow()
	}
	sign := base64.StdEncoding.EncodeToString(signByte)
	fmt.Println("sign = ", sign)
	excepted := `oSRUETUDImIclAfwSQiWiN3346GBow/T7NoEDLKs7OHdA3tYIJXeZjES82AOD0rOr5jr/4coF7XRGaig2gVeoFYIGG9bj4jwXW7ruypH5fjZMNRKwqoCfKVXkq/Na6IhChElzqP+faWUinLQq1J+mBO90m86vKRZltBWVT6iLi4ME5RG7oLp/cTpufPwl0dGVgeuc2wO0/Elf3kssWbrsy68r4U+unmH5JxKcYSmBcjLML3+J31DQ5553eJ7R03JtPsyuq9UGqMgYu189WFLrqam3a/4ZLflyGnQgBW4HoSJsHZnu89hLvqF2ON8PQtLQsZ+vfz/u4mPXr3K90i6NQ==`
	assert.Equal(t, sign, excepted)
}

func TestRSA2Encryptor_Sign(t *testing.T) {
	var encryptor = NewRSA2Encryptor()
	key := `MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDjHd4qw0R3OdlCvFgUizhCQ8oo+70G+dpLaOt/2kENOFflKghwcuUQ+4nWpOn+nUGWWcpeYGrr8CdWNDw2aIhzDAyRsMUUh7ViMMC8HA+Esprdm7UsrP9l6GObRDQyY3xJwD3KYQqD118w7sEudHjohw1kRITDtWLuU3Ffbl4TSV7RVH/O+wDZ7SnsakQ3xAIni5dqDHmw4Dd5i7IUUG31gd59WC39M/lBKk1XSRVovShk9XAUrL0/W9hzydqgAS/9dFFQu4Ln3UxQ5hC8RVQmXBSytmZJzYPlFxScCpVtSWSJfJBvWYqNHmzpsrvVaYAlGOjpMZVXOgmrzlTXmnkdAgMBAAECggEAF67bpfXqw8wCfdUKEkpaOX68K/3kPj/7pXVxaUmnEuvXLoxtiNxSSq0QOJPF2sknN7hxQ9omDChk0bZsuPe5ktWk0eRvCK8GGREgZ/09GQdO4uEDyX7YuxW6nUxFbSO2qDIlv17TK+Bfisi62E9I9GZw3Q3QEmBtypBk+CCYKsZ/iAJ0OKMDmQz5Y/gcR578iWFsPfdsGPxK/vCZKIEzxSQDkCMtfFpWUQn8sqwdkoMYSfgiKilqFyjSVQZoTCtdnh8/EvmZMreB1fF7WnZYcdDATG4A5qvZyobRGkztYgeoaWV9NKTpw/GB80iiem2mduxiVaapstwNrKahk79suQKBgQD8HuwfJI+fXVGKnagalmlym2aW7CUur0LRhE9z6VPWNJu3K4D0clGsMZ3A2DEFlzXRlY1Sr8LuGTyVArX7ab9J0vWzSYepGkCwS5gD+77NrSu0Qxc6mp5wNXtdgjgxBaw/3MEjOtajykURB7yW38RaWFNZGKVn7LmMVKmXhcC5QwKBgQDmnHT0l0TJ2OMnZq0tAwBaCokImyJ6HYuRcKSaILWPDMz0SzhVp6jjOQsF12TFLNSgRDC+iPciqaWJzACRbIMDGqd6gguczo8tnCS4eD1LgXXSpODTQQYnTP3MfGow5jBX9II9jSL9NHRL5Sk/l1EN9Dj3M8dQMlJRtfrtB34uHwKBgQC27bzG7+EhcTUbzT5OZDoIRMbP1HE6CUIDAOwhHveMYUlmQrNjKZsmxC1A4dvXwZn0An2ytAJMfZUeTQQ7ccOwTdemCUDcKkcrYv3eTgdn9jDSrycoh01T/woOk9AviX0sLQEZjbR0zOsF60YjdiJiptl6uM4ytGkAb+FJJmvqPwKBgDBj9Ea+1zhjwoaqDPy8/H3oaAjeRMXLHVZPhLqy0mZKEVfR0OhoXhAQEDgRkputZJCcvn28z97+KjZYEGZzlqo4FZynXThyP6kacroiwPnvGIIzBtpNcrUcesVF9iJ8qvhJ3mp8CzOGpkCmvZkSb3e2H53/x3sUlCGBRj4mrFuRAoGBALwFtuRiIEwNRsd82x5QverXDJGsLls4LTZm3shfoZUtNnkvlWxer9SbxRGb7APsToAessgZ14RrVTgoztTKzedOkHIuR3P9IO5aSZeoC0FZg3vjmiNFhrV5dVuHvXTNn6i7Q35ab8m+eqEcJ9YeihBbavEMU04zUB5NGugtt8K+`
	str := `app_id=2014072300007148&charset=utf8&sign_type=RSA2`
	priKey, err := parserPrivateKey(key)
	if !assert.NoError(t, err) {
		t.FailNow()
	}
	signByte, err := encryptor.Sign([]byte(str), priKey)
	if !assert.NoError(t, err) {
		t.FailNow()
	}
	sign := base64.StdEncoding.EncodeToString(signByte)
	fmt.Println("sign = ", sign)
	excepted := `qyfKu4LRxW/8fdIVANDQ7oNCrc548lIW32YWOsB0GTvfrxY6sKNclJBy+EhIxQn8HK5kHIAgPBWMAHNGQd6kY+nxouPEEgaQgyQt3uqXswFUP3FcuDjp2kXRO2s8/s34AhiIEmpdxO8FPX+WewWWZ9pAo2Z9bVXIBPBTyA5qsvESXZkG3jWiwPe/OZcAAInsIjavkYtX+O60WU5tK7yQiz/owLDewLq9602ua28BJ1L62lBpsBawibR+2/Mmw5jHd14DHyUYv9Z9rdTMaV7PzUjWMpZGlp5qbTO5NAgxomjv2waA8xci3Ln78l5TGqabS8GWkhB67/eY1eGtKN8BKQ==`
	assert.Equal(t, sign, excepted)
}
